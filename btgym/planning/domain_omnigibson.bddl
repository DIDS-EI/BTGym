(define (domain omnigibson)
    (:requirements :strips :typing :adl)
    (:types $type_list)
    
    (:predicates 
        (cooked ?obj1)
        (frozen ?obj1)
        (open ?obj1)
        (folded ?obj1)
        (unfolded ?obj1)
        (toggled_on ?obj1)
        (hot ?obj1)
        (on_fire ?obj1)
        (future ?obj1)
        (real ?obj1)
        (saturated ?obj1 ?obj2)
        (covered ?obj1 ?obj2)
        (filled ?obj1 ?obj2)
        (contains ?obj1 ?obj2)
        (ontop ?obj1 ?obj2)
        (nextto ?obj1 ?obj2)
        (under ?obj1 ?obj2)
        (touching ?obj1 ?obj2)
        (inside ?obj1 ?obj2)
        (overlaid ?obj1 ?obj2)
        (attached ?obj1 ?obj2)
        (draped ?obj1 ?obj2)
        (insource ?obj1 ?obj2)
        (inroom ?obj1 ?obj2)
        (broken ?obj1)
        (grasped ?obj1 ?obj2)
    )
    


    ;; Open an object
    (:action open
        :parameters (?obj1)
        :precondition (forall (?obj2) (not (grasped agent.n.01_1 ?obj2)))
        :effect (open ?obj1)
    )

    (:action close
        :parameters (?obj1)
        :precondition (forall (?obj2) (not (grasped agent.n.01_1 ?obj2)))
        :effect (not (open ?obj1))
    )

    ;; Grasp an object
    (:action grasp
        :parameters (?obj1)
        :precondition (forall (?obj2) (not (grasped agent.n.01_1 ?obj2)))
        :effect (grasped agent.n.01_1 ?obj1)
    )

    ;; Release an object
    (:action release
        :parameters (?obj1)
        :precondition (grasped agent.n.01_1 ?obj1)
        :effect (not (grasped agent.n.01_1 ?obj1))
    )

    ;; Place the currently grasped object on top of another object
    (:action place_on_top
        :parameters (?obj1 ?obj2)
        :precondition (grasped agent.n.01_1  ?obj1)
        :effect (and (ontop ?obj1 ?obj2) (covered ?obj1 ?obj2) (not (grasped agent.n.01_1 ?obj1))) 
    )

    ;; Place the currently grasped object inside another object
    (:action place_inside
        :parameters (?obj1 ?obj2)
        :precondition (grasped agent.n.01_1 ?obj1)
        :effect (and (contains ?obj1 ?obj2) (inside ?obj1 ?obj2) (not (grasped agent.n.01_1 ?obj1)))        ;;contains inside
    )

)
